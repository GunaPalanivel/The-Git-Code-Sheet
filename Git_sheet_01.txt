# GIT CHEAT SHEET

Git is the free and open source distributed version control system that's responsible for everything GitHub 
related that happens locally on your computer. This cheat sheet features the most important and commonly 
used Git commands for easy reference





## INSTALLATION & GUIS
# GitHub provides platform-specific installers for Git, along with a graphical user interface.
# GitHub for Windows: https://windows.github.com
# GitHub for Mac: https://mac.github.com
# For Linux and Solaris platforms, the latest release is available on the official Git website: http://git-scm.com





## SETUP
# Configuring user information used across all local repositories
# Set a name that is identifiable for credit when reviewing version history
git config --global user.name "[firstname lastname]"

# Set an email address that will be associated with each history marker
git config --global user.email "[valid-email]"

# Set automatic command line coloring for Git for easy reviewing
git config --global color.ui auto





## SETUP & INIT
# Configuring user information, initializing, and cloning repositories
# Initialize an existing directory as a Git repository
git init

# Retrieve an entire repository from a hosted location via URL
git clone [url]





## STAGE & SNAPSHOT
# Working with snapshots and the Git staging area
# Show modified files in the working directory, staged for the next commit
git status

# Add a file as it looks now to your next commit (stage)
git add [file]

# Unstage a file while retaining the changes in the working directory
git reset [file]

# Diff of what is changed but not staged
git diff

# Diff of what is staged but not yet committed
git diff --staged

# Commit your staged content as a new commit snapshot
git commit -m "[descriptive message]"